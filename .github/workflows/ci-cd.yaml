name: Build and Deploy to GKE

on:
  push:
    branches:
      - kratos

env:
  PROJECT_ID: oval-plate-389803
  PROJECT_NUMBER: 930086028904
  CLUSTER: cluster-1
  CLUSTER_ZONE: asia-northeast1-b
  REPOSITORY: lastmbiz-registry
  REPOSITORY_REGION: asia-northeast3
  IMAGE: user-service

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v0'
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/lastmbiz-pool/providers/lastmbiz-provider
          service_account: github-actions@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Connect to Artifact Registry
        run: |-
          echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.REPOSITORY_REGION }}-docker.pkg.dev

      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.CLUSTER }}
          location: ${{ env.CLUSTER_ZONE }}
      #
      # Build the Docker image and push it to Artifact Registry
      #
      - name: Create image tag
        run: echo "IMAGE_TAG=${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV

      - name: Lock image version in deployment.yaml
        run: sed -i 's|IMAGE|${{ env.IMAGE_TAG }}|g' deploy/deploy.yaml
      #
      # Build the user-service
      #
      - name: Build Docker image
        run: docker build --tag "${{ env.IMAGE_TAG }}" .

      - name: Publish Docker image to Google Artifact Registry
        run: docker push "${{ env.IMAGE_TAG }}"

      #
      # Deploy to GKE
      #
      - name: Deploy to GKE
        run: kubectl apply -f deploy/deploy.yaml

